<?php

/**
 * @file
 * GD Header.
 */

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\block\Entity\Block;
use Drupal\file\Entity\File;
use Drupal\image\Entity\ImageStyle;

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function gd_header_node_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {

  // Only on full view mode.
  if ($view_mode == 'full') {

    // Get image field that was set in Gd Header block.
    $block = Block::load('gdheader');
    if ($block) {

      // Get the block settings.
      $settings = $block->get('settings');
      if (isset($settings['gdheader_node_type']) && isset($settings['gdheader_img_style'])) {
        if (isset($settings['gdheader_node_type'][$entity->getType()])) {

          // Image field to use.
          $field_name = $settings['gdheader_node_type'][$entity->getType()];

          // Image style to use.
          $style = $settings['gdheader_img_style'];

          // Is there an image stored in the field?
          if ($entity->$field_name->getValue()) {

            // Then select a random image.
            $i = rand(0, $entity->$field_name->count() - 1);
            $fid = $entity->$field_name->getValue()[$i]['target_id'];

            // And generate the image style image.
            $file = File::load($fid);
            $path = $file->getFileUri();
            $url = ImageStyle::load($style)->buildUrl($path);

            // Finally, pass the URL to Drupal JS.
            $build['#attached']['drupalSettings'] = array(
              'gd_header' => array('node_img_url' => $url),
            );
          }
        }
      }
    }
  }
}
